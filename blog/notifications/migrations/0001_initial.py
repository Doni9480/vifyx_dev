# Generated by Django 5.0.6 on 2024-09-02 13:29

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('albums', '0010_draftalbumtag'),
        ('blogs', '0024_delete_banner'),
        ('contests', '0012_alter_prizealbumelement_options_and_more'),
        ('custom_tests', '0022_remove_test_likes_testlike'),
        ('posts', '0042_remove_post_likes_postlike'),
        ('quests', '0017_questtag'),
        ('surveys', '0018_remove_survey_likes_surveylike'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Ban',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(default='You have been banned.', verbose_name='Text')),
            ],
        ),
        migrations.CreateModel(
            name='Unban',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(default='You have been unbanned.', verbose_name='Text')),
            ],
        ),
        migrations.CreateModel(
            name='NotificationBlog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('get_notifications_blog', models.BooleanField(default=True, verbose_name='Get notifications for blog')),
                ('blog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blogs.blog', verbose_name='Blog')),
                ('follower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Follower')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_of_blog', to=settings.AUTH_USER_MODEL, verbose_name='User of blog')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(null=True, verbose_name='Text')),
                ('is_read', models.BooleanField(default=False, verbose_name='Is read')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('album', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='albums.album', verbose_name='Album')),
                ('ban', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='notifications.ban', verbose_name='Ban')),
                ('contest', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='contests.contest')),
                ('contest_album', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contest_album', to='albums.album', verbose_name='Contest album')),
                ('contest_post', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contest_post', to='posts.post', verbose_name='Contest post')),
                ('contest_quest', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contest_quest', to='quests.quest', verbose_name='Contest uest')),
                ('donate', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='blogs.donate', verbose_name='Donate')),
                ('post', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='posts.post', verbose_name='Post')),
                ('quest', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='quests.quest', verbose_name='Quest')),
                ('survey', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='surveys.survey', verbose_name='Survey')),
                ('test', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='custom_tests.test', verbose_name='Test')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
                ('unban', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='notifications.unban', verbose_name='Unban')),
            ],
        ),
    ]
